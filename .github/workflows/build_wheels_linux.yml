name: Build Wheels for Linux

on:
  push:
    branches:
      - main

jobs:
  build_wheels:
    strategy:
      matrix:
        # These architectures are too rare in practice:
        # "i686" (32-bit x86), "ppc64le" (PowerPC), "s390x" (IBM Z), "armv7l" (32-bit ARM)
        # The user can still build Mimir locally if they need it.
        architecture: ["x86_64"]  # TODO: Add "aarch64"
        python-version: ["cp38", "cp39", "cp310", "cp311", "cp312", "cp313"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    if: github.repository_owner == 'simon-stahlberg'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        ref: main

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"  # Use a fixed version for the setup step

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade twine cibuildwheel

    - name: Build wheels
      run: cibuildwheel --output-dir wheelhouse --verbose
      env:
        CIBW_PLATFORM: "linux"
        CIBW_BUILD: "${{ matrix.python-version }}-*"
        CIBW_ARCHS: "${{ matrix.architecture }}"
        CIBW_BUILD_VERBOSITY: "1"

    - name: Upload to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: twine upload --skip-existing --repository-url https://upload.pypi.org/legacy/ wheelhouse/*
