#ifndef MIMIR_SEARCH_STATES_BITSET_GROUNDED_HPP_
#define MIMIR_SEARCH_STATES_BITSET_GROUNDED_HPP_

#include "bitset.hpp"

#include "../../buffer/flatbuffers/search/states/bitset-grounded_generated.h"


namespace mimir
{

/**
 * Implementation class
 *
 * The lifted state builder extends the builder base memory layout as follows:
 *  __________________________________
 * |                |          |      |
 * | data_size_type | state_id | TODO |
 * |________________|__________|______|
 *
 *
*/
template<>
class Builder<StateDispatcher<BitsetStateTag, GroundedTag>>
    : public BuilderBase<Builder<StateDispatcher<BitsetStateTag, GroundedTag>>>
    , public StateBuilderBase<Builder<StateDispatcher<BitsetStateTag, GroundedTag>>> {

    state_id_type m_id;

    /* Implement BuilderBase interface */
    void finish_impl() {
        // TODO:
    }

    uint8_t* get_buffer_pointer_impl() {
        // TODO: implement
        return nullptr;
    }

    const uint8_t* get_buffer_pointer_impl() const {
        // TODO: implement
        return nullptr;
    }

    void clear_impl() {
        // TODO: implement
    }

    template<typename>
    friend class BuilderBase;

    /* Implement StateBuilderBase interface */
    void set_id_impl(state_id_type id) { m_id = id; }

    template<typename>
    friend class StateBuilderBase;
};


/**
 * Implementation class
 *
 * Reads the memory layout generated by the lifted state builder.
*/
template<>
class View<StateDispatcher<BitsetStateTag, GroundedTag>>
    : public ViewBase<View<StateDispatcher<BitsetStateTag, GroundedTag>>>
    , public StateViewBase<View<StateDispatcher<BitsetStateTag, GroundedTag>>> {
private:
    /* Implement ViewBase interface */

    // Give access to the private interface implementations.
    template<typename>
    friend class ViewBase;

    /* Implement SearchNodeViewBase interface */
    [[nodiscard]] state_id_type get_id_impl() const {
        return 0;
    }

    // Give access to the private interface implementations.
    template<typename>
    friend class StateViewBase;

public:
    explicit View(uint8_t* data) : ViewBase<View<StateDispatcher<BitsetStateTag, GroundedTag>>>(data) { }
};


}  // namespace mimir

#endif  // MIMIR_SEARCH_STATES_BITSET_GROUNDED_HPP_
