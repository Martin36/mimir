@PACKAGE_INIT@

include(CMakeFindDependencyMacro)


##############################################################
# CMake modules and macro files
##############################################################

include("${CMAKE_CURRENT_LIST_DIR}/cmake/configure_boost.cmake")


##############################################################
# Dependency Handling
##############################################################

# Our integration superbuild installs its dependencies
# in respective subdirectories, e.g., boost, googletest, benchmark
list(APPEND CMAKE_PREFIX_PATH "${PACKAGE_PREFIX_DIR}/loki")
list(APPEND CMAKE_PREFIX_PATH "${PACKAGE_PREFIX_DIR}/boost")


# ----
# Loki
# ----

find_dependency(loki REQUIRED)


# -----
# Boost
# -----

# Find Boost headers only according to https://cmake.org/cmake/help/latest/module/FindBoost.html
configure_boost()
find_dependency(Boost ${BOOST_MIN_VERSION} REQUIRED)

if(Boost_FOUND)
  include_directories(${Boost_INCLUDE_DIRS})
endif()


############
# Components
############

set(_mimir_supported_components mimir)

foreach(_comp ${mimir_FIND_COMPONENTS})
  if (NOT _comp IN_LIST _mimir_supported_components)
    set(mimir_FOUND False)
    set(mimir_NOT_FOUND_MESSAGE "Unsupported component: ${_comp}")
  endif()
  include("${CMAKE_CURRENT_LIST_DIR}/${_comp}Targets.cmake")
endforeach()

get_filename_component(MIMIR_CONFIG_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
message(STATUS "Found mimir: ${MIMIR_CONFIG_DIR} (found version \"${mimir_VERSION}\")")